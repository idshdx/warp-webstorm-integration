name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-shared-schemas:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build shared schemas
        run: npm run build --workspace=shared-schemas
      
      - name: Test shared schemas
        run: npm run test --workspace=shared-schemas
      
      - name: Upload schemas coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./shared-schemas/coverage/lcov.info
          flags: shared-schemas

  test-warp-extension:
    runs-on: ubuntu-latest
    needs: test-shared-schemas
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint TypeScript
        run: npm run lint --workspace=warp-extension
      
      - name: Type check
        run: npx tsc --noEmit --workspace=warp-extension
      
      - name: Run unit tests
        run: npm run test --workspace=warp-extension
      
      - name: Run integration tests
        run: npm run test:integration --workspace=warp-extension
        env:
          NODE_ENV: test
          MCP_PORT: 8766
      
      - name: Build extension
        run: npm run build --workspace=warp-extension
      
      - name: Upload extension coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./warp-extension/coverage/lcov.info
          flags: warp-extension

  test-jetbrains-plugin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      
      - name: Run plugin tests
        run: |
          cd jetbrains-plugin
          ./gradlew test
      
      - name: Run plugin verifier
        run: |
          cd jetbrains-plugin
          ./gradlew runPluginVerifier
      
      - name: Build plugin
        run: |
          cd jetbrains-plugin
          ./gradlew buildPlugin
      
      - name: Upload plugin artifact
        uses: actions/upload-artifact@v3
        with:
          name: jetbrains-plugin
          path: jetbrains-plugin/build/distributions/*.zip

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run npm audit
        run: npm audit --audit-level moderate
      
      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [test-warp-extension, test-jetbrains-plugin]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Start test environment
        run: |
          docker-compose -f docker-compose.test.yml up -d
          npm run wait-for-services
      
      - name: Run E2E tests
        run: npm run test:e2e
        env:
          NODE_ENV: test
          MCP_HOST: localhost
          MCP_PORT: 8765
      
      - name: Cleanup test environment
        run: docker-compose -f docker-compose.test.yml down

  performance-tests:
    runs-on: ubuntu-latest
    needs: [test-warp-extension]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run performance benchmarks
        run: npm run test:performance --workspace=warp-extension
      
      - name: Upload performance results
        uses: actions/upload-artifact@v3
        with:
          name: performance-results
          path: warp-extension/performance-results.json
